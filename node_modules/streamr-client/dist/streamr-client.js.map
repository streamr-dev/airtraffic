{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 61e85c1687c6a59d4530","webpack:///external \"babel-runtime/helpers/classCallCheck\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/helpers/createClass\"","webpack:///external \"debug\"","webpack:///external \"babel-runtime/core-js/object/get-prototype-of\"","webpack:///external \"babel-runtime/helpers/possibleConstructorReturn\"","webpack:///external \"babel-runtime/helpers/inherits\"","webpack:///external \"babel-runtime/core-js/object/assign\"","webpack:///external \"babel-runtime/core-js/object/keys\"","webpack:///external \"streamr-client-protocol\"","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"eventemitter3\"","webpack:///./src/rest/utils.js","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///./src/rest/domain/Stream.js","webpack:///external \"babel-runtime/helpers/extends\"","webpack:///external \"web3\"","webpack:///external \"web3-fake-provider\"","webpack:///./src/Signer.js","webpack:///external \"babel-runtime/core-js/set\"","webpack:///external \"babel-runtime/core-js/object/create\"","webpack:///external \"babel-runtime/core-js/object/set-prototype-of\"","webpack:///external \"babel-runtime/core-js/array/from\"","webpack:///external \"babel-runtime/core-js/reflect/construct\"","webpack:///./src/index.js","webpack:///./src/StreamrClient.js","webpack:///external \"babel-runtime/helpers/typeof\"","webpack:///external \"babel-runtime/helpers/toConsumableArray\"","webpack:///./src/Subscription.js","webpack:///external \"node-fetch\"","webpack:///./src/Connection.js","webpack:///external \"ws\"","webpack:///./src/Session.js","webpack:///./src/errors/FailedToPublishError.js","webpack:///./src/errors/InvalidSignatureError.js","webpack:///./src/SubscribedStream.js","webpack:///external \"babel-runtime/core-js/object/values\"","webpack:///./src/rest/AllEndpoints.js","webpack:///./src/rest/StreamEndpoints.js","webpack:///external \"querystring\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///./src/rest/LoginEndpoints.js"],"names":["debug","authFetch","url","session","opts","requireNewToken","authHeader","options","unauthenticated","getSessionToken","token","Authorization","req","headers","res","text","ok","length","JSON","parse","Error","status","Stream","client","props","_client","restUrl","id","method","body","toObject","json","undefined","result","forEach","key","startsWith","data","timestamp","Date","now","publish","require","web3","SIGNATURE_TYPE_ETH","Signer","privateKey","account","eth","accounts","privateKeyToAccount","address","toLowerCase","sign","d","signature","provider","w3","getAccounts","personal","signatureType","publishRequest","ts","getTimestampAsNumber","payload","getPayloadToSign","streamId","getSerializedContent","signData","apiKey","sessionToken","content","partitionKey","publisherId","recover","msg","trustedPublishers","publisherAddress","verifySignature","has","publishWithSignature","AllEndpoints","prototype","StreamrClient","connection","autoConnect","autoDisconnect","auth","verifySignatures","subscribedStreams","publishQueue","authKey","signer","createSigner","on","stream","verifyStreamMessage","valid","getSubscriptions","sub","handleMessage","error","handleError","getSubscription","subId","response","setSubscribing","filter","resending","setState","State","subscribed","_removeSubscription","unsubscribed","_checkAutoDisconnect","emit","getState","_resendAndSubscribe","publishQueueCopy","slice","args","err","errorObject","console","message","InvalidJsonError","addSubscription","removeSubscription","streamObjectOrId","isConnected","_requestPublish","push","connect","catch","optionsOrStreamId","callback","legacyOptions","partition","from","to","_requestResend","resend_from","resend_to","unsubscribe","_addSubscription","state","CONNECTED","unsubscribing","_requestUnsubscribe","reject","CONNECTING","disconnect","subscribing","_requestSubscribe","once","hasResendOptions","subscribedSubs","it","then","isSubscribing","request","send","setTimeout","resendOptions","setResending","streamPartition","getEffectiveResendOptions","requestToSendPromise","getSignedPublishRequest","resolve","requestToSend","generateSubscriptionId","toString","Subscription","queue","lastReceivedOffset","resendOptionCount","resend_all","resend_last","resend_from_time","getTime","checkQueue","previousOffset","isResend","checkForGap","offset","getParsedContent","isByeMessage","originalQueue","hasReceivedMessages","streamMessage","Connection","socket","DISCONNECTED","binaryType","events","onopen","onclose","updateState","DISCONNECTING","onmessage","messageEvent","websocketResponse","deserialize","constructor","getMessageName","close","websocketRequest","serialize","module","exports","Session","LOGGED_OUT","loginFunction","loginWithChallengeResponse","loginWithApiKey","username","password","loginWithUsernamePassword","LOGGING_IN","sessionTokenPromise","tokenObj","LOGGED_IN","reason","SubscribedStream","subscriptions","publishersPromise","getStreamPublishers","getPublishers","publishers","getVerifySignatures","streamPromise","getStream","requireSignedData","value","StreamEndpoints","LoginEndpoints","query","stringify","map","listStreams","name","public","getStreamByName","createStream","getOrCreateStream","addresses","a","publishHttp","agentSettings","keepAlive","keepAliveMsecs","agentByProtocol","http","https","getKeepAliveAgentForUrl","requestOptions","agent","getChallenge","challenge","sendChallengeResponse","signingFunction"],"mappings":"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","file":"streamr-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"streamr-client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StreamrClient\"] = factory();\n\telse\n\t\troot[\"StreamrClient\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 61e85c1687c6a59d4530","module.exports = require(\"babel-runtime/helpers/classCallCheck\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/classCallCheck\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"babel-runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/regenerator\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/asyncToGenerator\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/createClass\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/createClass\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/get-prototype-of\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/possibleConstructorReturn\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/inherits\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/inherits\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/assign\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/keys\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/keys\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"streamr-client-protocol\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"streamr-client-protocol\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/json/stringify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/json/stringify\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"eventemitter3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter3\"\n// module id = 12\n// module chunks = 0","import fetch from 'node-fetch'\nimport debugFactory from 'debug'\n\nconst debug = debugFactory('StreamrClient:utils')\n\nexport const authFetch = async (url, session, opts = {}, requireNewToken = false) => {\n    debug('authFetch: ', url, opts)\n    const authHeader = {}\n    if (session && !session.options.unauthenticated) {\n        const token = await session.getSessionToken(requireNewToken)\n        authHeader.Authorization = `Bearer ${token}`\n    }\n\n    const req = {\n        ...opts,\n        headers: {\n            ...authHeader,\n            ...(opts.headers || {}),\n        },\n    }\n    const res = await fetch(url, req)\n\n    const text = await res.text()\n\n    if (res.ok && text.length) {\n        try {\n            return JSON.parse(text)\n        } catch (err) {\n            throw new Error(`Failed to parse JSON response: ${text}`)\n        }\n    } else if (res.ok) {\n        return {}\n    } else if ((res.status === 400 || res.status === 401) && !requireNewToken) {\n        return authFetch(url, session, opts, true)\n    } else {\n        throw new Error(`Request to ${url} returned with error code ${res.status}: ${text}`)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/utils.js","module.exports = require(\"babel-runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/promise\"\n// module id = 14\n// module chunks = 0","import { authFetch } from '../utils'\n\nexport default class Stream {\n    constructor(client, props) {\n        this._client = client\n        Object.assign(this, props)\n    }\n\n    async update() {\n        const json = await authFetch(\n            `${this._client.options.restUrl}/streams/${this.id}`,\n            this._client.session,\n            {\n                method: 'PUT',\n                body: JSON.stringify(this.toObject()),\n            },\n        )\n        return json ? new Stream(this._client, json) : undefined\n    }\n\n    toObject() {\n        const result = {}\n        Object.keys(this).forEach((key) => {\n            if (!key.startsWith('_')) {\n                result[key] = this[key]\n            }\n        })\n        return result\n    }\n\n    delete() {\n        return authFetch(\n            `${this._client.options.restUrl}/streams/${this.id}`,\n            this._client.session,\n            {\n                method: 'DELETE',\n            },\n        )\n    }\n\n    getPermissions() {\n        return authFetch(\n            `${this._client.options.restUrl}/streams/${this.id}/permissions`,\n            this._client.session,\n        )\n    }\n\n    detectFields() {\n        return authFetch(\n            `${this._client.options.restUrl}/streams/${this.id}/detectFields`,\n            this._client.session,\n        )\n    }\n\n    publish(data, timestamp = Date.now()) {\n        return this._client.publish(this.id, data, timestamp)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/domain/Stream.js","module.exports = require(\"babel-runtime/helpers/extends\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/extends\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"web3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"web3-fake-provider\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3-fake-provider\"\n// module id = 18\n// module chunks = 0","import { PublishRequest } from 'streamr-client-protocol'\n\nimport Web3 from 'web3'\nimport FakeProvider from 'web3-fake-provider'\n\nconst debug = require('debug')('StreamrClient::Signer')\n\nconst web3 = new Web3(new FakeProvider())\n\nconst SIGNATURE_TYPE_ETH = 1\n\nexport default class Signer {\n    constructor(options = {}) {\n        this.options = options\n        if (this.options.privateKey) {\n            const account = web3.eth.accounts.privateKeyToAccount(this.options.privateKey)\n            this.address = account.address.toLowerCase()\n            this.sign = (d) => account.sign(d).signature\n        } else if (this.options.provider) {\n            this.sign = async (d) => {\n                const w3 = new Web3(this.options.provider)\n                const accounts = await w3.eth.getAccounts()\n                const address = accounts[0]\n                if (!address) {\n                    throw new Error('Cannot access account from provider')\n                }\n                this.address = address\n                return w3.eth.personal.sign(d, this.address)\n            }\n        } else {\n            throw new Error('Need either \"privateKey\" or \"provider\".')\n        }\n    }\n\n    async signData(data, signatureType = SIGNATURE_TYPE_ETH) {\n        if (signatureType === SIGNATURE_TYPE_ETH) {\n            return this.sign(data)\n        }\n        throw new Error(`Unrecognized signature type: ${signatureType}`)\n    }\n\n    async getSignedPublishRequest(publishRequest, signatureType = SIGNATURE_TYPE_ETH) {\n        const ts = publishRequest.getTimestampAsNumber()\n        if (!ts) {\n            throw new Error('Timestamp is required as part of the data to sign.')\n        }\n        const payload = Signer.getPayloadToSign(publishRequest.streamId, ts, this.address, publishRequest.getSerializedContent(), signatureType)\n        const signature = await this.signData(payload, signatureType)\n        return new PublishRequest(\n            publishRequest.streamId,\n            publishRequest.apiKey,\n            publishRequest.sessionToken,\n            publishRequest.content,\n            publishRequest.timestamp,\n            publishRequest.partitionKey,\n            this.address,\n            signatureType,\n            signature,\n        )\n    }\n\n    static getPayloadToSign(streamId, timestamp, publisherId, content, signatureType = SIGNATURE_TYPE_ETH) {\n        if (signatureType === SIGNATURE_TYPE_ETH) {\n            return `${streamId}${timestamp}${publisherId.toLowerCase()}${content}`\n        }\n        throw new Error(`Unrecognized signature type: ${signatureType}`)\n    }\n\n    static verifySignature(data, signature, address, signatureType = SIGNATURE_TYPE_ETH) {\n        if (signatureType === SIGNATURE_TYPE_ETH) {\n            return web3.eth.accounts.recover(data, signature).toLowerCase() === address.toLowerCase()\n        }\n        throw new Error(`Unrecognized signature type: ${signatureType}`)\n    }\n\n    static verifyStreamMessage(msg, trustedPublishers = new Set()) {\n        const payload = this.getPayloadToSign(msg.streamId, msg.timestamp, msg.publisherAddress, msg.getSerializedContent())\n        const result = this.verifySignature(payload, msg.signature, msg.publisherAddress, msg.signatureType)\n            && trustedPublishers.has(msg.publisherAddress.toLowerCase())\n        debug('verifyStreamMessage: pass: %o, message: %o', result, msg)\n        return result\n    }\n\n    static createSigner(options, publishWithSignature) {\n        if (publishWithSignature === 'never') {\n            return undefined\n        } else if (publishWithSignature === 'auto' && !options.privateKey && !options.provider) {\n            return undefined\n        } else if (publishWithSignature === 'auto' || publishWithSignature === 'always') {\n            return new Signer(options)\n        }\n        throw new Error(`Unknown parameter value: ${publishWithSignature}`)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Signer.js","module.exports = require(\"babel-runtime/core-js/set\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/set\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/create\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/create\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/set-prototype-of\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/set-prototype-of\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/array/from\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/array/from\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/reflect/construct\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/reflect/construct\"\n// module id = 24\n// module chunks = 0","import StreamrClient from './StreamrClient'\nimport * as AllEndpoints from './rest/AllEndpoints'\n\n// Mixin the rest endpoints to the StreamrClient\nObject.assign(StreamrClient.prototype, AllEndpoints)\n\nexport default StreamrClient\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import EventEmitter from 'eventemitter3'\nimport debugFactory from 'debug'\nimport {\n    SubscribeRequest,\n    UnsubscribeRequest,\n    PublishRequest,\n    ResendRequest,\n    Errors,\n} from 'streamr-client-protocol'\n\nconst debug = debugFactory('StreamrClient')\n\nimport Subscription from './Subscription'\nimport Stream from './rest/domain/Stream'\nimport Connection from './Connection'\nimport Session from './Session'\nimport Signer from './Signer'\nimport FailedToPublishError from './errors/FailedToPublishError'\nimport InvalidSignatureError from './errors/InvalidSignatureError'\nimport SubscribedStream from './SubscribedStream'\n\nexport default class StreamrClient extends EventEmitter {\n    constructor(options, connection) {\n        super()\n\n        // Default options\n        this.options = {\n            // The server to connect to\n            url: 'wss://www.streamr.com/api/v1/ws?controlLayerVersion=0&messageLayerVersion=29',\n            restUrl: 'https://www.streamr.com/api/v1',\n            // Automatically connect on first subscribe\n            autoConnect: true,\n            // Automatically disconnect on last unsubscribe\n            autoDisconnect: true,\n            auth: {},\n            publishWithSignature: 'auto',\n            verifySignatures: 'auto',\n        }\n        this.subscribedStreams = {}\n        this.publishQueue = []\n\n        Object.assign(this.options, options || {})\n\n        // Backwards compatibility for option 'authKey' => 'apiKey'\n        if (this.options.authKey && !this.options.apiKey) {\n            this.options.apiKey = this.options.authKey\n        }\n        if (this.options.apiKey) {\n            this.options.auth.apiKey = this.options.apiKey\n        }\n\n        if (this.options.auth.privateKey && !this.options.auth.privateKey.startsWith('0x')) {\n            this.options.auth.privateKey = `0x${this.options.auth.privateKey}`\n        }\n\n        this.session = new Session(this, this.options.auth)\n        this.signer = Signer.createSigner(this.options.auth, this.options.publishWithSignature)\n        // Event handling on connection object\n        this.connection = connection || new Connection(this.options)\n\n        // Broadcast messages to all subs listening on stream\n        this.connection.on('BroadcastMessage', async (msg) => {\n            const stream = this.subscribedStreams[msg.payload.streamId]\n            if (stream) {\n                const valid = await stream.verifyStreamMessage(msg.payload)\n                if (valid) {\n                    // Notify the Subscriptions for this stream. If this is not the message each individual Subscription\n                    // is expecting, they will either ignore it or request resend via gap event.\n                    stream.getSubscriptions().forEach((sub) => sub.handleMessage(msg.payload, false))\n                } else {\n                    const error = new InvalidSignatureError(msg.payload)\n                    stream.getSubscriptions().forEach((sub) => sub.handleError(error))\n                }\n            } else {\n                debug('WARN: message received for stream with no subscriptions: %s', msg.payload.streamId)\n            }\n        })\n\n        // Unicast messages to a specific subscription only\n        this.connection.on('UnicastMessage', async (msg) => {\n            const stream = this.subscribedStreams[msg.payload.streamId]\n            if (stream) {\n                const sub = stream.getSubscription(msg.subId)\n                if (sub) {\n                    const valid = await stream.verifyStreamMessage(msg.payload)\n                    if (valid) {\n                        sub.handleMessage(msg.payload, true)\n                    } else {\n                        sub.handleError(new InvalidSignatureError(msg.payload))\n                    }\n                } else {\n                    debug('WARN: subscription not found for stream: %s, sub: %s', msg.payload.streamId, msg.subId)\n                }\n            } else {\n                debug('WARN: message received for stream with no subscriptions: %s', msg.payload.streamId)\n            }\n        })\n\n        this.connection.on('SubscribeResponse', (response) => {\n            const stream = this.subscribedStreams[response.payload.streamId]\n            if (stream) {\n                stream.setSubscribing(false)\n                stream.getSubscriptions().filter((sub) => !sub.resending)\n                    .forEach((sub) => sub.setState(Subscription.State.subscribed))\n            }\n            debug('Client subscribed: %o', response.payload)\n        })\n\n        this.connection.on('UnsubscribeResponse', (response) => {\n            debug('Client unsubscribed: %o', response.payload)\n            const stream = this.subscribedStreams[response.payload.streamId]\n            if (stream) {\n                stream.getSubscriptions().forEach((sub) => {\n                    this._removeSubscription(sub)\n                    sub.setState(Subscription.State.unsubscribed)\n                })\n            }\n\n            this._checkAutoDisconnect()\n        })\n\n        // Route resending state messages to corresponding Subscriptions\n        this.connection.on('ResendResponseResending', (response) => {\n            const stream = this.subscribedStreams[response.payload.streamId]\n            if (stream && stream.getSubscription(response.payload.subId)) {\n                stream.getSubscription(response.payload.subId).emit('resending', response.payload)\n            } else {\n                debug('resent: Subscription %d is gone already', response.payload.subId)\n            }\n        })\n\n        this.connection.on('ResendResponseNoResend', (response) => {\n            const stream = this.subscribedStreams[response.payload.streamId]\n            if (stream && stream.getSubscription(response.payload.subId)) {\n                stream.getSubscription(response.payload.subId).emit('no_resend', response.payload)\n            } else {\n                debug('resent: Subscription %d is gone already', response.payload.subId)\n            }\n        })\n\n        this.connection.on('ResendResponseResent', (response) => {\n            const stream = this.subscribedStreams[response.payload.streamId]\n            if (stream && stream.getSubscription(response.payload.subId)) {\n                stream.getSubscription(response.payload.subId).emit('resent', response.payload)\n            } else {\n                debug('resent: Subscription %d is gone already', response.payload.subId)\n            }\n        })\n\n        // On connect/reconnect, send pending subscription requests\n        this.connection.on('connected', () => {\n            debug('Connected!')\n            this.emit('connected')\n\n            // Check pending subscriptions\n            Object.keys(this.subscribedStreams)\n                .forEach((streamId) => {\n                    this.subscribedStreams[streamId].getSubscriptions().forEach((sub) => {\n                        if (sub.getState() !== Subscription.State.subscribed) {\n                            this._resendAndSubscribe(sub)\n                        }\n                    })\n                })\n\n            // Check pending publish requests\n            const publishQueueCopy = this.publishQueue.slice(0)\n            this.publishQueue = []\n            publishQueueCopy.forEach((args) => {\n                this.publish(...args)\n            })\n        })\n\n        this.connection.on('disconnected', () => {\n            debug('Disconnected.')\n            this.emit('disconnected')\n\n            Object.keys(this.subscribedStreams)\n                .forEach((streamId) => {\n                    const stream = this.subscribedStreams[streamId]\n                    stream.setSubscribing(false)\n                    stream.getSubscriptions().forEach((sub) => {\n                        sub.setState(Subscription.State.unsubscribed)\n                    })\n                })\n        })\n\n        this.connection.on('ErrorResponse', (err) => {\n            const errorObject = new Error(err.payload.error)\n            this.emit('error', errorObject)\n            console.error(errorObject.message)\n        })\n\n        this.connection.on('error', (err) => {\n            // If there is an error parsing a json message in a stream, fire error events on the relevant subs\n            if (err instanceof Errors.InvalidJsonError) {\n                const stream = this.subscribedStreams[err.streamId]\n                if (stream) {\n                    stream.getSubscriptions().forEach((sub) => sub.handleError(err))\n                } else {\n                    debug('WARN: InvalidJsonError received for stream with no subscriptions: %s', err.streamId)\n                }\n            } else {\n                const errorObject = err instanceof Error ? err : new Error(err)\n                this.emit('error', errorObject)\n                console.error(errorObject.message)\n            }\n        })\n    }\n\n    _addSubscription(sub) {\n        if (!this.subscribedStreams[sub.streamId]) {\n            this.subscribedStreams[sub.streamId] = new SubscribedStream(this, sub.streamId)\n        }\n        this.subscribedStreams[sub.streamId].addSubscription(sub)\n    }\n\n    _removeSubscription(sub) {\n        const stream = this.subscribedStreams[sub.streamId]\n        if (stream) {\n            stream.removeSubscription(sub)\n            if (stream.getSubscriptions().length === 0) {\n                delete this.subscribedStreams[sub.streamId]\n            }\n        }\n    }\n\n    getSubscriptions(streamId) {\n        const stream = this.subscribedStreams[streamId]\n        return stream ? stream.getSubscriptions() : []\n    }\n\n    async publish(streamObjectOrId, data, timestamp = Date.now(), apiKey = this.options.auth.apiKey) {\n        const sessionToken = await this.session.getSessionToken()\n        // Validate streamObjectOrId\n        let streamId\n        if (streamObjectOrId instanceof Stream) {\n            streamId = streamObjectOrId.id\n        } else if (typeof streamObjectOrId === 'string') {\n            streamId = streamObjectOrId\n        } else {\n            throw new Error(`First argument must be a Stream object or the stream id! Was: ${streamObjectOrId}`)\n        }\n\n        // Validate data\n        if (typeof data !== 'object') {\n            throw new Error(`Message data must be an object! Was: ${data}`)\n        }\n\n        // If connected, emit a publish request\n        if (this.isConnected()) {\n            this._requestPublish(streamId, data, timestamp, apiKey, sessionToken)\n        } else if (this.options.autoConnect) {\n            this.publishQueue.push([streamId, data, timestamp, apiKey])\n            this.connect().catch(() => {}) // ignore\n        } else {\n            throw new FailedToPublishError(\n                streamId,\n                data,\n                'Wait for the \"connected\" event before calling publish, or set autoConnect to true!',\n            )\n        }\n    }\n\n    subscribe(optionsOrStreamId, callback, legacyOptions) {\n        if (!optionsOrStreamId) {\n            throw new Error('subscribe: Invalid arguments: subscription options is required!')\n        } else if (!callback) {\n            throw new Error('subscribe: Invalid arguments: callback is required!')\n        }\n\n        // Backwards compatibility for giving a streamId as first argument\n        let options\n        if (typeof optionsOrStreamId === 'string') {\n            options = {\n                stream: optionsOrStreamId,\n            }\n        } else if (typeof optionsOrStreamId === 'object') {\n            options = optionsOrStreamId\n        } else {\n            throw new Error(`subscribe: options must be an object! Given: ${optionsOrStreamId}`)\n        }\n\n        // Backwards compatibility for giving an options object as third argument\n        Object.assign(options, legacyOptions)\n\n        if (!options.stream) {\n            throw new Error('subscribe: Invalid arguments: options.stream is not given')\n        }\n\n        // Create the Subscription object and bind handlers\n        const sub = new Subscription(options.stream, options.partition || 0, options.apiKey || this.options.auth.apiKey, callback, options)\n        sub.on('gap', (from, to) => {\n            if (!sub.resending) {\n                this._requestResend(sub, {\n                    resend_from: from, resend_to: to,\n                })\n            }\n        })\n        sub.on('done', () => {\n            debug('done event for sub %d', sub.id)\n            this.unsubscribe(sub)\n        })\n\n        // Add to lookups\n        this._addSubscription(sub)\n\n        // If connected, emit a subscribe request\n        if (this.connection.state === Connection.State.CONNECTED) {\n            this._resendAndSubscribe(sub)\n        } else if (this.options.autoConnect) {\n            this.connect().catch(() => {}) // ignore\n        }\n\n        return sub\n    }\n\n    unsubscribe(sub) {\n        if (!sub || !sub.streamId) {\n            throw new Error('unsubscribe: please give a Subscription object as an argument!')\n        }\n\n        // If this is the last subscription for this stream, unsubscribe the client too\n        if (this.subscribedStreams[sub.streamId] !== undefined && this.subscribedStreams[sub.streamId].getSubscriptions().length === 1\n            && this.isConnected()\n            && sub.getState() === Subscription.State.subscribed) {\n            sub.setState(Subscription.State.unsubscribing)\n            this._requestUnsubscribe(sub.streamId)\n        } else if (sub.getState() !== Subscription.State.unsubscribing && sub.getState() !== Subscription.State.unsubscribed) {\n            // Else the sub can be cleaned off immediately\n            this._removeSubscription(sub)\n            sub.setState(Subscription.State.unsubscribed)\n            this._checkAutoDisconnect()\n        }\n    }\n\n    unsubscribeAll(streamId) {\n        if (!streamId) {\n            throw new Error('unsubscribeAll: a stream id is required!')\n        } else if (typeof streamId !== 'string') {\n            throw new Error('unsubscribe: stream id must be a string!')\n        }\n\n        const stream = this.subscribedStreams[streamId]\n        if (stream) {\n            stream.getSubscriptions().forEach((sub) => {\n                this.unsubscribe(sub)\n            })\n        }\n    }\n\n    isConnected() {\n        return this.connection.state === Connection.State.CONNECTED\n    }\n\n    reconnect() {\n        return this.connect()\n    }\n\n    connect() {\n        if (this.isConnected()) {\n            return Promise.reject(new Error('Already connected!'))\n        } else if (this.connection.state === Connection.State.CONNECTING) {\n            return Promise.reject(new Error('Already connecting!'))\n        }\n\n        debug('Connecting to %s', this.options.url)\n        return this.connection.connect()\n    }\n\n    pause() {\n        return this.connection.disconnect()\n    }\n\n    disconnect() {\n        this.subscribedStreams = {}\n        return this.connection.disconnect()\n    }\n\n    _checkAutoDisconnect() {\n        // Disconnect if no longer subscribed to any streams\n        if (this.options.autoDisconnect && Object.keys(this.subscribedStreams).length === 0) {\n            debug('Disconnecting due to no longer being subscribed to any streams')\n            this.disconnect()\n        }\n    }\n\n    _resendAndSubscribe(sub) {\n        if (sub.getState() !== Subscription.State.subscribing && !sub.resending) {\n            sub.setState(Subscription.State.subscribing)\n            this._requestSubscribe(sub)\n\n            // Once subscribed, ask for a resend\n            sub.once('subscribed', () => {\n                if (sub.hasResendOptions()) {\n                    this._requestResend(sub)\n                }\n            })\n        }\n    }\n\n    _requestSubscribe(sub) {\n        const stream = this.subscribedStreams[sub.streamId]\n        const subscribedSubs = stream.getSubscriptions().filter((it) => it.getState() === Subscription.State.subscribed)\n\n        return this.session.getSessionToken().then((sessionToken) => {\n            // If this is the first subscription for this stream, send a subscription request to the server\n            if (!stream.isSubscribing() && subscribedSubs.length === 0) {\n                const request = new SubscribeRequest(sub.streamId, undefined, sub.apiKey, sessionToken)\n                debug('_requestSubscribe: subscribing client: %o', request)\n                stream.setSubscribing(true)\n                this.connection.send(request)\n            } else if (subscribedSubs.length > 0) {\n                // If there already is a subscribed subscription for this stream, this new one will just join it immediately\n                debug('_requestSubscribe: another subscription for same stream: %s, insta-subscribing', sub.streamId)\n\n                setTimeout(() => {\n                    sub.setState(Subscription.State.subscribed)\n                })\n            }\n        })\n    }\n\n    _requestUnsubscribe(streamId) {\n        debug('Client unsubscribing stream %o', streamId)\n        this.connection.send(new UnsubscribeRequest(streamId))\n    }\n\n    _requestResend(sub, resendOptions) {\n        sub.setResending(true)\n        return this.session.getSessionToken().then((sessionToken) => {\n            const request = new ResendRequest(\n                sub.streamId,\n                sub.streamPartition,\n                sub.id,\n                resendOptions || sub.getEffectiveResendOptions(),\n                sub.apiKey,\n                sessionToken,\n            )\n            debug('_requestResend: %o', request)\n            this.connection.send(request)\n        })\n    }\n\n    _requestPublish(streamId, data, timestamp, apiKey, sessionToken) {\n        const request = new PublishRequest(streamId, apiKey, sessionToken, data, timestamp)\n        const requestToSendPromise = this.signer ? this.signer.getSignedPublishRequest(request) : Promise.resolve(request)\n        return requestToSendPromise.then((requestToSend) => {\n            debug('_requestPublish: %o', requestToSend)\n            return this.connection.send(requestToSend)\n        })\n    }\n\n    handleError(msg) {\n        debug(msg)\n        this.emit('error', msg)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StreamrClient.js","module.exports = require(\"babel-runtime/helpers/typeof\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/typeof\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/toConsumableArray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/toConsumableArray\"\n// module id = 28\n// module chunks = 0","import EventEmitter from 'eventemitter3'\nimport debugFactory from 'debug'\nimport { Errors } from 'streamr-client-protocol'\n\nconst debug = debugFactory('StreamrClient::Subscription')\n\nlet subId = 0\nfunction generateSubscriptionId() {\n    const id = subId\n    subId += 1\n    return id.toString()\n}\n\nexport default class Subscription extends EventEmitter {\n    static get State() {\n        return {\n            unsubscribed: 'unsubscribed',\n            subscribing: 'subscribing',\n            subscribed: 'subscribed',\n            unsubscribing: 'unsubscribing',\n        }\n    }\n\n    constructor(streamId, streamPartition, apiKey, callback, options) {\n        super()\n\n        if (!streamId) {\n            throw new Error('No stream id given!')\n        }\n        if (!callback) {\n            throw new Error('No callback given!')\n        }\n\n        this.id = generateSubscriptionId()\n        this.streamId = streamId\n        this.streamPartition = streamPartition\n        this.apiKey = apiKey\n        this.callback = callback\n        this.options = options || {}\n        this.queue = []\n        this.state = Subscription.State.unsubscribed\n        this.resending = false\n        this.lastReceivedOffset = null\n\n        // Check that multiple resend options are not given\n        let resendOptionCount = 0\n        if (this.options.resend_all) {\n            resendOptionCount += 1\n        }\n        if (this.options.resend_from != null) {\n            resendOptionCount += 1\n        }\n        if (this.options.resend_last != null) {\n            resendOptionCount += 1\n        }\n        if (this.options.resend_from_time != null) {\n            resendOptionCount += 1\n        }\n        if (resendOptionCount > 1) {\n            throw new Error(`Multiple resend options active! Please use only one: ${JSON.stringify(options)}`)\n        }\n\n        // Automatically convert Date objects to numbers for resend_from_time\n        if (this.options.resend_from_time != null\n            && typeof this.options.resend_from_time !== 'number') {\n            if (typeof this.options.resend_from_time.getTime === 'function') {\n                this.options.resend_from_time = this.options.resend_from_time.getTime()\n            } else {\n                throw new Error('resend_from_time option must be a Date object or a number representing time!')\n            }\n        }\n\n        /** * Message handlers ** */\n\n        this.on('unsubscribed', () => {\n            this.setResending(false)\n        })\n\n        this.on('no_resend', (response) => {\n            debug('Sub %s no_resend: %o', this.id, response)\n            this.setResending(false)\n            this.checkQueue()\n        })\n\n        this.on('resent', (response) => {\n            debug('Sub %s resent: %o', this.id, response)\n            this.setResending(false)\n            this.checkQueue()\n        })\n\n        this.on('connected', () => {\n\n        })\n\n        this.on('disconnected', () => {\n            this.setState(Subscription.State.unsubscribed)\n            this.setResending(false)\n        })\n    }\n\n    /**\n     * Gap check: If the msg contains the previousOffset, and we know the lastReceivedOffset,\n     * and the previousOffset is larger than what has been received, we have a gap!\n     */\n    checkForGap(previousOffset) {\n        return previousOffset != null &&\n            this.lastReceivedOffset != null &&\n            previousOffset > this.lastReceivedOffset\n    }\n\n    handleMessage(msg, isResend = false) {\n        if (msg.previousOffset == null) {\n            debug('handleMessage: prevOffset is null, gap detection is impossible! message: %o', msg)\n        }\n\n        // TODO: check this.options.resend_last ?\n        // If resending, queue broadcasted messages\n        if (this.resending && !isResend) {\n            this.queue.push(msg)\n        } else if (this.checkForGap(msg.previousOffset) && !this.resending) {\n            // Queue the message to be processed after resend\n            this.queue.push(msg)\n\n            const from = this.lastReceivedOffset + 1\n            const to = msg.previousOffset\n            debug('Gap detected, requesting resend for stream %s from %d to %d', this.streamId, from, to)\n            this.emit('gap', from, to)\n        } else if (this.lastReceivedOffset != null && msg.offset <= this.lastReceivedOffset) {\n            // Prevent double-processing of messages for any reason\n            debug('Sub %s already received message: %d, lastReceivedOffset: %d. Ignoring message.', this.id, msg.offset, this.lastReceivedOffset)\n        } else {\n            // Normal case where prevOffset == null || lastReceivedOffset == null || prevOffset === lastReceivedOffset\n            this.lastReceivedOffset = msg.offset\n            this.callback(msg.getParsedContent(), msg)\n            if (msg.isByeMessage()) {\n                this.emit('done')\n            }\n        }\n    }\n\n    checkQueue() {\n        if (this.queue.length) {\n            debug('Attempting to process %d queued messages for stream %s', this.queue.length, this.streamId)\n\n            const originalQueue = this.queue\n            this.queue = []\n\n            originalQueue.forEach((msg) => this.handleMessage(msg, false))\n        }\n    }\n\n    hasResendOptions() {\n        return this.options.resend_all === true || this.options.resend_from >= 0 || this.options.resend_from_time >= 0 || this.options.resend_last > 0\n    }\n\n    /**\n     * Resend needs can change if messages have already been received.\n     * This function always returns the effective resend options:\n     *\n     * If messages have been received:\n     * - resend_all becomes resend_from\n     * - resend_from becomes resend_from the latest received message\n     * - resend_from_time becomes resend_from the latest received message\n     * - resend_last stays the same\n     */\n    getEffectiveResendOptions() {\n        if (this.hasReceivedMessages() && this.hasResendOptions()\n            && (this.options.resend_all || this.options.resend_from || this.options.resend_from_time)) {\n            return {\n                resend_from: this.lastReceivedOffset + 1,\n            }\n        }\n\n        // Pick resend options from the options\n        const result = {}\n        Object.keys(this.options).forEach((key) => {\n            if (key.startsWith('resend_')) {\n                result[key] = this.options[key]\n            }\n        })\n        return result\n    }\n\n    hasReceivedMessages() {\n        return this.lastReceivedOffset != null\n    }\n\n    getState() {\n        return this.state\n    }\n\n    setState(state) {\n        debug(`Subscription: Stream ${this.streamId} state changed ${this.state} => ${state}`)\n        this.state = state\n        this.emit(state)\n    }\n\n    isResending() {\n        return this.resending\n    }\n\n    setResending(resending) {\n        debug(`Subscription: Stream ${this.streamId} resending: ${resending}`)\n        this.resending = resending\n    }\n\n    handleError(err) {\n        /**\n         * If parsing the (expected) message failed, we should still mark it as received. Otherwise the\n         * gap detection will think a message was lost, and re-request the failing message.\n         */\n        if (err instanceof Errors.InvalidJsonError && !this.checkForGap(err.streamMessage.previousOffset)) {\n            this.lastReceivedOffset = err.streamMessage.offset\n        }\n        this.emit('error', err)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Subscription.js","module.exports = require(\"node-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-fetch\"\n// module id = 30\n// module chunks = 0","import EventEmitter from 'eventemitter3'\nimport debugFactory from 'debug'\nimport WebSocket from 'ws'\n\nimport { WebsocketResponse } from 'streamr-client-protocol'\n\nconst debug = debugFactory('StreamrClient::Connection')\n\nclass Connection extends EventEmitter {\n    constructor(options, socket) {\n        super()\n        if (!options.url) {\n            throw new Error('URL is not defined!')\n        }\n        this.options = options\n        this.state = Connection.State.DISCONNECTED\n        this.socket = socket\n\n        if (options.autoConnect) {\n            this.connect()\n        }\n    }\n\n    updateState(state) {\n        this.state = state\n        this.emit(state)\n    }\n\n    connect() {\n        if (this.state === Connection.State.CONNECTING) {\n            return Promise.reject(new Error('Already connecting!'))\n        } else if (this.state === Connection.State.CONNECTED) {\n            return Promise.reject(new Error('Already connected!'))\n        }\n        this.socket = this.socket || new WebSocket(this.options.url)\n        this.socket.binaryType = 'arraybuffer'\n        this.socket.events = new EventEmitter()\n        this.socket.onopen = () => this.socket.events.emit('open')\n        this.socket.onclose = () => this.socket.events.emit('close')\n\n        this.updateState(Connection.State.CONNECTING)\n\n        this.socket.events.on('open', () => {\n            debug('Connected to ', this.options.url)\n            this.updateState(Connection.State.CONNECTED)\n        })\n\n        this.socket.events.on('close', () => {\n            if (this.state !== Connection.State.DISCONNECTING) {\n                debug('Connection lost. Attempting to reconnect')\n                setTimeout(() => {\n                    this.connect()\n                }, 2000)\n            }\n\n            this.updateState(Connection.State.DISCONNECTED)\n        })\n\n        this.socket.onmessage = (messageEvent) => {\n            try {\n                const websocketResponse = WebsocketResponse.deserialize(messageEvent.data)\n                this.emit(websocketResponse.constructor.getMessageName(), websocketResponse)\n            } catch (err) {\n                this.emit('error', err)\n            }\n        }\n\n        return new Promise((resolve) => {\n            this.socket.events.once('open', () => {\n                resolve()\n            })\n        })\n    }\n\n    disconnect() {\n        if (this.state === Connection.State.DISCONNECTING) {\n            return Promise.reject(new Error('Already disconnecting!'))\n        } else if (this.state === Connection.State.DISCONNECTED) {\n            return Promise.reject(new Error('Already disconnected!'))\n        } else if (this.socket === undefined) {\n            return Promise.reject(new Error('Something is wrong: socket is undefined!'))\n        }\n\n        return new Promise((resolve) => {\n            this.updateState(Connection.State.DISCONNECTING)\n            this.socket.events.once('close', resolve)\n            this.socket.close()\n        })\n    }\n\n    send(websocketRequest) {\n        try {\n            this.socket.send(websocketRequest.serialize())\n        } catch (err) {\n            this.emit('error', err)\n        }\n    }\n}\n\nConnection.State = {\n    DISCONNECTED: 'disconnected',\n    CONNECTING: 'connecting',\n    CONNECTED: 'connected',\n    DISCONNECTING: 'disconnecting',\n}\n\nmodule.exports = Connection\n\n\n\n// WEBPACK FOOTER //\n// ./src/Connection.js","module.exports = require(\"ws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ws\"\n// module id = 32\n// module chunks = 0","import Web3 from 'web3'\nimport FakeProvider from 'web3-fake-provider'\n\nconst web3 = new Web3(new FakeProvider())\n\nexport default class Session {\n    constructor(client, options) {\n        this._client = client\n        this.options = options || {}\n        this.state = Session.State.LOGGED_OUT\n\n        if (typeof this.options.privateKey !== 'undefined') {\n            const account = web3.eth.accounts.privateKeyToAccount(this.options.privateKey)\n            this.loginFunction = async () => this._client.loginWithChallengeResponse((d) => account.sign(d).signature, account.address)\n        } else if (typeof this.options.provider !== 'undefined') {\n            const w3 = new Web3(this.options.provider)\n            this.loginFunction = async () => {\n                const accounts = await w3.eth.getAccounts()\n                const address = accounts[0]\n                if (!address) {\n                    throw new Error('Cannot access account from provider')\n                }\n                return this._client.loginWithChallengeResponse((d) => w3.eth.personal.sign(d, address), address)\n            }\n        } else if (typeof this.options.apiKey !== 'undefined') {\n            this.loginFunction = async () => this._client.loginWithApiKey(this.options.apiKey)\n        } else if (typeof this.options.username !== 'undefined' && typeof this.options.password !== 'undefined') {\n            this.loginFunction = async () => this._client.loginWithUsernamePassword(this.options.username, this.options.password)\n        } else {\n            if (!this.options.sessionToken) {\n                this.options.unauthenticated = true\n            }\n            this.loginFunction = async () => {\n                throw new Error('Need either \"privateKey\", \"provider\", \"apiKey\" or \"username\"+\"password\" to login.')\n            }\n        }\n    }\n\n    async getSessionToken(requireNewToken = false) {\n        if (this.options.sessionToken && !requireNewToken) {\n            return this.options.sessionToken\n        }\n        if (this.options.unauthenticated) {\n            return undefined\n        }\n        if (this.state !== Session.State.LOGGING_IN) {\n            this.state = Session.State.LOGGING_IN\n            this.sessionTokenPromise = this.loginFunction().then((tokenObj) => {\n                this.options.sessionToken = tokenObj.token\n                this.state = Session.State.LOGGED_IN\n                return tokenObj.token\n            }).catch((err) => {\n                this.state = Session.State.LOGGED_OUT\n                throw err\n            })\n        }\n        return this.sessionTokenPromise\n    }\n}\n\nSession.State = {\n    LOGGED_OUT: 'logged out',\n    LOGGING_IN: 'logging in',\n    LOGGED_IN: 'logged in',\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Session.js","module.exports = class FailedToPublishError extends Error {\n    constructor(streamId, msg, reason) {\n        super(`Failed to publish to stream ${streamId} due to: ${reason}. Message was: ${msg}`)\n        this.streamId = streamId\n        this.msg = msg\n        this.reason = reason\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors/FailedToPublishError.js","module.exports = class InvalidSignatureError extends Error {\n    constructor(streamMessage) {\n        super(`Invalid message signature: ${streamMessage.serialize()}`)\n        this.streamMessage = streamMessage\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors/InvalidSignatureError.js","import Signer from './Signer'\n\nexport default class SubscribedStream {\n    constructor(client, streamId) {\n        this._client = client\n        this.streamId = streamId\n        this.subscriptions = {}\n        if (client.options.verifySignatures === 'always') {\n            this.verifySignatures = true\n        } else if (client.options.verifySignatures === 'never') {\n            this.verifySignatures = false\n        } else if (client.options.verifySignatures === 'auto') {\n            this.verifySignatures = undefined // Will retrieve it from the stream's metadata in getVerifySignatures() method\n        } else {\n            throw new Error(`Unrecognized verifySignatures parameter value: ${client.options.verifySignatures}`)\n        }\n    }\n\n    getPublishers() {\n        if (!this.publishersPromise) {\n            this.publishersPromise = this._client.getStreamPublishers(this.streamId)\n        }\n        return this.publishersPromise\n    }\n\n    async verifyStreamMessage(msg) {\n        if (msg.signatureType && msg.signatureType !== 0) { // always verify in case the message is signed\n            const publishers = await this.getPublishers()\n            return Signer.verifyStreamMessage(msg, new Set(publishers))\n        }\n        return !(await this.getVerifySignatures())\n    }\n\n    async getStream() {\n        if (!this.streamPromise) {\n            this.streamPromise = this._client.getStream(this.streamId)\n        }\n        return this.streamPromise\n    }\n\n    async getVerifySignatures() {\n        if (this.verifySignatures === undefined) { // client.options.verifySignatures === 'auto'\n            const stream = await this.getStream()\n            this.verifySignatures = stream.requireSignedData\n        }\n        return this.verifySignatures\n    }\n\n    getSubscription(subId) {\n        return this.subscriptions[subId]\n    }\n\n    getSubscriptions() {\n        return Object.values(this.subscriptions) || []\n    }\n\n    isSubscribing() {\n        return this.subscribing\n    }\n\n    setSubscribing(value) {\n        this.subscribing = value\n    }\n\n    emptySubscriptionsSet() {\n        return Object.keys(this.subscriptions).length === 0\n    }\n\n    addSubscription(sub) {\n        this.subscriptions[sub.id] = sub\n    }\n\n    removeSubscription(sub) {\n        delete this.subscriptions[sub.id]\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SubscribedStream.js","module.exports = require(\"babel-runtime/core-js/object/values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/values\"\n// module id = 37\n// module chunks = 0","import * as StreamEndpoints from './StreamEndpoints'\nimport * as LoginEndpoints from './LoginEndpoints'\n\nmodule.exports = {\n    ...StreamEndpoints, ...LoginEndpoints,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/AllEndpoints.js","import qs from 'querystring'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\nimport debugFactory from 'debug'\n\nimport Stream from './domain/Stream'\nimport { authFetch } from './utils'\n\nconst debug = debugFactory('StreamrClient')\n\nconst agentSettings = {\n    keepAlive: true,\n    keepAliveMsecs: 5000,\n}\n\nconst agentByProtocol = {\n    http: new HttpAgent(agentSettings),\n    https: new HttpsAgent(agentSettings),\n}\n\nfunction getKeepAliveAgentForUrl(url) {\n    if (url.startsWith('https')) {\n        return agentByProtocol.https\n    } else if (url.startsWith('http')) {\n        return agentByProtocol.http\n    }\n\n    throw new Error(`Unknown protocol in URL: ${url}`)\n}\n\n// These function are mixed in to StreamrClient.prototype.\n// In the below functions, 'this' is intended to be the StreamrClient\nexport async function getStream(streamId) {\n    const url = `${this.options.restUrl}/streams/${streamId}`\n    const json = await authFetch(url, this.session)\n    return json ? new Stream(this, json) : undefined\n}\n\nexport async function listStreams(query = {}) {\n    const url = `${this.options.restUrl}/streams?${qs.stringify(query)}`\n    const json = await authFetch(url, this.session)\n    return json ? json.map((stream) => new Stream(this, stream)) : []\n}\n\nexport async function getStreamByName(name) {\n    const json = await this.listStreams({\n        name,\n        public: false,\n    })\n    return json[0] ? new Stream(this, json[0]) : undefined\n}\n\nexport async function createStream(props) {\n    if (!props || !props.name) {\n        throw new Error('Stream properties must contain a \"name\" field!')\n    }\n\n    const json = await authFetch(\n        `${this.options.restUrl}/streams`,\n        this.session,\n        {\n            method: 'POST',\n            body: JSON.stringify(props),\n        },\n    )\n    return json ? new Stream(this, json) : undefined\n}\n\nexport async function getOrCreateStream(props) {\n    let json\n\n    // Try looking up the stream by id or name, whichever is defined\n    if (props.id) {\n        json = await this.getStream(props.id)\n    } else if (props.name) {\n        json = await this.getStreamByName(props.name)\n    }\n\n    // If not found, try creating the stream\n    if (!json) {\n        json = await this.createStream(props)\n        debug('Created stream: %s (%s)', props.name, json.id)\n    }\n\n    // If still nothing, throw\n    if (!json) {\n        throw new Error(`Unable to find or create stream: ${props.name}`)\n    } else {\n        return new Stream(this, json)\n    }\n}\n\nexport async function getStreamPublishers(streamId) {\n    const url = `${this.options.restUrl}/streams/${streamId}/publishers`\n    const json = await authFetch(url, this.session)\n    return json.addresses.map((a) => a.toLowerCase())\n}\n\nexport function publishHttp(streamObjectOrId, data, requestOptions = {}, keepAlive = true) {\n    let streamId\n    if (streamObjectOrId instanceof Stream) {\n        streamId = streamObjectOrId.id\n    } else {\n        streamId = streamObjectOrId\n    }\n\n    // Send data to the stream\n    return authFetch(\n        `${this.options.restUrl}/streams/${streamId}/data`,\n        this.session,\n        Object.assign({}, requestOptions, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            agent: keepAlive ? getKeepAliveAgentForUrl(this.options.restUrl) : undefined,\n        }),\n    )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/StreamEndpoints.js","module.exports = require(\"querystring\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"querystring\"\n// module id = 40\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 41\n// module chunks = 0","module.exports = require(\"https\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"https\"\n// module id = 42\n// module chunks = 0","import { authFetch } from './utils'\n\nasync function getSessionToken(url, props) {\n    return authFetch(\n        url,\n        undefined,\n        {\n            method: 'POST',\n            body: JSON.stringify(props),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        },\n    )\n}\n\nexport async function getChallenge(address) {\n    const url = `${this.options.restUrl}/login/challenge/${address}`\n    return authFetch(\n        url,\n        undefined,\n        {\n            method: 'POST',\n        },\n    )\n}\n\nexport async function sendChallengeResponse(challenge, signature, address) {\n    const url = `${this.options.restUrl}/login/response`\n    const props = {\n        challenge,\n        signature,\n        address,\n    }\n    return getSessionToken(url, props)\n}\n\nexport async function loginWithChallengeResponse(signingFunction, address) {\n    const challenge = await this.getChallenge(address)\n    const signature = await signingFunction(challenge.challenge)\n    return this.sendChallengeResponse(challenge, signature, address)\n}\n\nexport async function loginWithApiKey(apiKey) {\n    const url = `${this.options.restUrl}/login/apikey`\n    const props = {\n        apiKey,\n    }\n    return getSessionToken(url, props)\n}\n\nexport async function loginWithUsernamePassword(username, password) {\n    const url = `${this.options.restUrl}/login/password`\n    const props = {\n        username,\n        password,\n    }\n    return getSessionToken(url, props)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/LoginEndpoints.js"],"sourceRoot":""}